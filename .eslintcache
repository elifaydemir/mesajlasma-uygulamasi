[{"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\store.js":"3","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\rootReducer.js":"4","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\reducers\\channelReducer.js":"5","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\actions\\types.js":"6","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\actions\\channel.js":"7","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\auth\\Login.jsx":"8","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\auth\\SignUp.jsx":"9","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\firebase.js":"10","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\auth\\PrivateRoute.jsx":"11","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\fallback.jsx":"12","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\ChatPanel\\ChatPanel.jsx":"13","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\SidePanel\\SidePanel.jsx":"14","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\Channels\\CreateChannelForm.jsx":"15","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\Channels\\ChannelList.jsx":"16","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\UserPanel\\UserPanel.jsx":"17","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\ChatPanel\\Message.jsx":"18"},{"size":1573,"mtime":1621509984980,"results":"19","hashOfConfig":"20"},{"size":807,"mtime":1621512182602,"results":"21","hashOfConfig":"20"},{"size":250,"mtime":1608475193000,"results":"22","hashOfConfig":"20"},{"size":269,"mtime":1608475193000,"results":"23","hashOfConfig":"20"},{"size":352,"mtime":1608475193000,"results":"24","hashOfConfig":"20"},{"size":106,"mtime":1608475193000,"results":"25","hashOfConfig":"20"},{"size":168,"mtime":1608475193000,"results":"26","hashOfConfig":"20"},{"size":3194,"mtime":1621097149996,"results":"27","hashOfConfig":"20"},{"size":3694,"mtime":1621096778450,"results":"28","hashOfConfig":"20"},{"size":575,"mtime":1621085984588,"results":"29","hashOfConfig":"20"},{"size":511,"mtime":1621098734745,"results":"30","hashOfConfig":"20"},{"size":412,"mtime":1621098505586,"results":"31","hashOfConfig":"20"},{"size":6148,"mtime":1621510092965,"results":"32","hashOfConfig":"20"},{"size":1991,"mtime":1621510067538,"results":"33","hashOfConfig":"20"},{"size":2713,"mtime":1621503621990,"results":"34","hashOfConfig":"20"},{"size":1534,"mtime":1621509719681,"results":"35","hashOfConfig":"20"},{"size":709,"mtime":1621510050041,"results":"36","hashOfConfig":"20"},{"size":856,"mtime":1621510117727,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12gjtd3",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\index.js",["82","83"],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\store.js",["84"],"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, {}, composeWithDevTools());\n\nexport default store;\n",["85","86"],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\rootReducer.js",[],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\reducers\\channelReducer.js",["87"],"import * as types from \"../actions/types\";\n\nconst initialState = {\n  currentChannel: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\actions\\types.js",[],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\store\\actions\\channel.js",[],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\auth\\Login.jsx",["88","89"],"import React, { useState, useEffect } from \"react\";\r\nimport {Grid, Segment,Form,Button, Message} from \"semantic-ui-react\";\r\nimport styles from \"./login.module.css\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst Login = () => {\r\n    const firebase = useFirebase();\r\n    const [fbErrors,setFbErrors] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const {register,errors,handleSubmit,setValue}=useForm();\r\n    useEffect(()=> {\r\n        register({name: \"email\"}, {required: true});\r\n        register({name: \"password\"},{required: true, minLength: 6});\r\n    },[]);\r\n    const onSubmit = ({ email, password }) => {\r\n        setSubmitting(true);\r\n        setFbErrors([]);\r\n        firebase.login({\r\n            email, password\r\n        })\r\n            .then((data)=>{\r\n                console.log(data);\r\n            })\r\n            .catch((error)=>{\r\n                setFbErrors([{ message: error.message }]);\r\n\r\n            })\r\n            .finally(()=>{\r\n                setSubmitting(false);\r\n            })\r\n\r\n    }\r\n    const displayErrors = () =>\r\n        fbErrors.map((error, index) => <p key={index}>{error.message}</p>);\r\n    return (\r\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className={styles.container}>\r\n            <Grid.Column style={{maxWidth:450}}>\r\n                <h1 className={styles.formHeader}>Develoveper\r\n                <span>.io</span></h1>\r\n                <Form size=\"large\" className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Segment>\r\n                        <Form.Input fluid icon=\"mail\"\r\n                                    iconPosition=\"left\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email Adresi\"\r\n                                    onChange={(e, { name, value }) => {\r\n                                        setValue(name, value);\r\n                                    }}\r\n                                    error={errors.email?true:false}\r\n                        />\r\n                        <Form.Input fluid icon=\"lock\"\r\n                                    iconPosition=\"left\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Şifre\"\r\n                                    type=\"password\"\r\n                                    onChange={(e, { name, value }) => {\r\n                                        setValue(name, value);\r\n                                    }}\r\n                                    error={errors.password?true:false}\r\n\r\n                        />\r\n                        <Button color=\"purple\" fluid size=\"large\" disabled={submitting}>Giriş Yap</Button>\r\n                    </Segment>\r\n                </Form>\r\n                {fbErrors.length > 0 && <Message error> {displayErrors()}</Message>}\r\n                <Message>\r\n                    Üye değil misin?<Link to=\"/signup\"><a className={styles.messageLink} >Hesap Oluştur</a></Link>\r\n                </Message>\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\auth\\SignUp.jsx",["90","91"],"import React, { useState,useEffect } from \"react\";\r\nimport {Grid, Segment,Form,Button, Message} from \"semantic-ui-react\";\r\nimport styles from \"./signup.module.css\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nconst SignUp = () => {\r\n    const firebase = useFirebase();\r\n    const {register,errors,handleSubmit,setValue}=useForm();\r\n    const [fbErrors,setFbErrors] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        register({name: \"email\"}, {required: true});\r\n        register({name: \"username\"}, {required: true});\r\n        register({name: \"password\"},{required: true, minLength: 6});\r\n    },[]);\r\n    const onSubmit = ({ username, email, password }, e) => {\r\n        setSubmitting(true);\r\n        setFbErrors([]);\r\n\r\n        const [first, last] = username.split(\" \");\r\n        firebase\r\n            .createUser(\r\n                {\r\n                    email,\r\n                    password,\r\n                },\r\n                {\r\n                    name: username,\r\n                    avatar: `https://ui-avatars.com/api/?name=${first}+${last}&background=random&color=fff`,\r\n                }\r\n            )\r\n            .then((user) => {\r\n                console.log(user);\r\n            })\r\n            .catch((error) => {\r\n                setFbErrors([{ message: error.message }]);\r\n            })\r\n            .finally(() => {\r\n                setSubmitting(false);\r\n            });\r\n    };\r\n    const displayErrors = () =>\r\n        fbErrors.map((error, index) => <p key={index}>{error.message}</p>);\r\n    return (\r\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className={styles.container}>\r\n            <Grid.Column style={{maxWidth:450}}>\r\n                <h1 className={styles.formHeader}>Develoveper\r\n                    <span>.io</span></h1>\r\n                <Form size=\"large\" className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Segment>\r\n                        <Form.Input fluid icon=\"user\" iconPosition=\"left\" name=\"username\" placeholder=\"Kullanıcı Adı\"\r\n                                    error={errors.username?true:false}\r\n                                    onChange={(e, { name, value }) => {\r\n                            setValue(name, value);\r\n                        }}/>\r\n                        <Form.Input fluid icon=\"mail\" iconPosition=\"left\" name=\"email\" placeholder=\"Email Adresi \"\r\n                                    error={errors.email?true:false}\r\n                                    onChange={(e, { name, value }) => {\r\n                                        setValue(name, value);\r\n                                    }}\r\n                        />\r\n                        <Form.Input fluid icon=\"lock\" iconPosition=\"left\" name=\"password\" placeholder=\"Şifre\" type=\"password\"\r\n                                    error={errors.password?true:false}\r\n                                    onChange={(e, { name, value }) => {\r\n                                        setValue(name, value);\r\n                                    }}\r\n                        />\r\n                        <Button color=\"purple\" fluid size=\"large\" disabled={submitting}> Kaydol </Button>\r\n                    </Segment>\r\n                </Form>\r\n                {fbErrors.length > 0 && <Message error> {displayErrors()}</Message>}\r\n                <Message>\r\n                    Zaten bir hesabın var mı?<Link to=\"/login\"><a className={styles.messageLink} >Giriş Yap</a></Link>\r\n                </Message>\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\firebase.js",[],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\auth\\PrivateRoute.jsx",["92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport {Route}from 'react-router-dom';\r\nimport {isLoaded, isEmpty} from \"react-redux-firebase\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Fallback from \"../fallback\";\r\nconst PrivateRoute = ({children,...rest}) => {\r\n    const auth = useSelector(state=>state.firebase.auth);\r\n    return (\r\n        <Route {...rest}\r\n            render={()=>isLoaded(auth)&& !isEmpty(auth)?children:<Fallback/>}\r\n        />\r\n\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\fallback.jsx",["94"],"import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment, Icon } from \"semantic-ui-react\";\r\n\r\nconst Fallback = () => (\r\n    <Segment style={{ height: \"100vh\" }}>\r\n        <Dimmer active inverted>\r\n            <Loader inverted>Loading</Loader>\r\n        </Dimmer>\r\n        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\r\n    </Segment>\r\n);\r\n\r\nexport default Fallback;","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\ChatPanel\\ChatPanel.jsx",["95","96"],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\SidePanel\\SidePanel.jsx",[],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\Channels\\CreateChannelForm.jsx",["97"],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Modal, Form, Button } from \"semantic-ui-react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nconst CreateChannelForm = ({ open, onClose, onOpen }) => {\r\n    const firebase = useFirebase();\r\n    const profile = useSelector((state) => state.firebase.profile);\r\n    const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n    useEffect(() => {\r\n        register({ name: \"name\" }, { required: true });\r\n        register({ name: \"description\" }, { required: true, minLength: 20 });\r\n    }, []);\r\n\r\n    const onSubmit = ({ name, description }) => {\r\n        firebase.push(\"channels\", {\r\n            name,\r\n            description,\r\n            createdBy: {\r\n                name: profile.name,\r\n                avatar: profile.avatar,\r\n            },\r\n        });\r\n\r\n        onClose();\r\n    };\r\n    return (\r\n        <Modal onClose={onClose} onOpen={onOpen} open={open}>\r\n            <Modal.Header>Yeni Kanal Oluştur</Modal.Header>\r\n            <Modal.Content>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Input\r\n                        fluid\r\n                        icon=\"mail\"\r\n                        iconPosition=\"left\"\r\n                        name=\"name\"\r\n                        onChange={(e, { name, value }) => {\r\n                            setValue(name, value);\r\n                        }}\r\n                        error={errors.name ? true : false}\r\n                        placeholder=\"#General\"\r\n                    />\r\n                    <Form.Input\r\n                        fluid\r\n                        icon=\"lock\"\r\n                        iconPosition=\"left\"\r\n                        name=\"description\"\r\n                        onChange={(e, { name, value }) => {\r\n                            setValue(name, value);\r\n                        }}\r\n                        error={errors.description ? true : false}\r\n                        placeholder=\"#Genel her türlü konunun konuşulabileceği bir kanaldır\"\r\n                    />\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"black\" onClick={() => onClose()}>\r\n                    Vazgeç\r\n                </Button>\r\n                <Button\r\n                    content=\"Oluştur\"\r\n                    labelPosition=\"right\"\r\n                    icon=\"checkmark\"\r\n                    positive\r\n                    onClick={() => handleSubmit(onSubmit)()}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateChannelForm;","C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\Channels\\ChannelList.jsx",["98","99"],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\UserPanel\\UserPanel.jsx",["100"],"C:\\Users\\ASUS\\Desktop\\chatify-master\\src\\components\\ChatPanel\\Message.jsx",[],{"ruleId":"101","severity":1,"message":"102","line":14,"column":5,"nodeType":"103","messageId":"104","endLine":14,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":39,"column":8,"nodeType":"107","endLine":39,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":1,"column":23,"nodeType":"103","messageId":"104","endLine":1,"endColumn":38},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":1,"nodeType":"116","endLine":20,"endColumn":3},{"ruleId":"105","severity":1,"message":"117","line":16,"column":7,"nodeType":"107","endLine":16,"endColumn":9,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":69,"column":56,"nodeType":"121","endLine":69,"endColumn":91},{"ruleId":"105","severity":1,"message":"117","line":17,"column":7,"nodeType":"107","endLine":17,"endColumn":9,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"120","line":75,"column":64,"nodeType":"121","endLine":75,"endColumn":99},{"ruleId":"101","severity":1,"message":"123","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"124","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"125","line":2,"column":42,"nodeType":"103","messageId":"104","endLine":2,"endColumn":46},{"ruleId":"101","severity":1,"message":"126","line":4,"column":30,"nodeType":"103","messageId":"104","endLine":4,"endColumn":38},{"ruleId":"101","severity":1,"message":"127","line":4,"column":40,"nodeType":"103","messageId":"104","endLine":4,"endColumn":47},{"ruleId":"105","severity":1,"message":"117","line":15,"column":8,"nodeType":"107","endLine":15,"endColumn":10,"suggestions":"128"},{"ruleId":"105","severity":1,"message":"129","line":21,"column":8,"nodeType":"107","endLine":21,"endColumn":28,"suggestions":"130"},{"ruleId":"105","severity":1,"message":"131","line":21,"column":9,"nodeType":"132","endLine":21,"endColumn":27},{"ruleId":"101","severity":1,"message":"123","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'applyMiddleware' is defined but never used.","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["136"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["137"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Icon' is defined but never used.","'isLoaded' is defined but never used.","'isEmpty' is defined but never used.",["138"],"React Hook useEffect has missing dependencies: 'channels', 'mounted', and 'setActiveChannel'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",{"desc":"140","fix":"141"},"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},{"desc":"142","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [history]",{"range":"148","text":"149"},"Update the dependencies array to be: [register]",{"range":"150","text":"151"},{"range":"152","text":"151"},{"range":"153","text":"151"},"Update the dependencies array to be: [channels, mounted, setActiveChannel]",{"range":"154","text":"155"},[1047,1049],"[history]",[684,686],"[register]",[742,744],[647,649],[851,871],"[channels, mounted, setActiveChannel]"]